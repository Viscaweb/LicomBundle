Visca\Bundle\LicomBundle\Entity\MatchBettingOutcome:
  type: entity
  inheritanceType: SINGLE_TABLE
  table: BettingOutcome
  repositoryClass: Visca\Bundle\LicomBundle\Repository\MatchBettingOutcomeRepository
  id:
    id:
      type: integer
      length: 10
      generator:
        strategy: AUTO
      options:
        unsigned: true
  fields:
    entityId:
      type: integer
      length: 10
      nullable: false
      options:
        default:
        unsigned: true
    status:
      type: BettingOutcomeStatusType
      length: 0
      nullable: true
      options:
        default: NULL
    del:
      type: SoftDeletionType
      length: 0
      nullable: false
      options:
        default: 'no'
    createdAt:
      type: DateTimeUTCType
      nullable: true
      options:
        default: NULL
    updatedAt:
      type: DateTimeUTCType
      nullable: true
      options:
        default: NULL
  indexes:
    fk_entity:
      columns: [Entity]
    fk_bettingOutcomeSubType:
      columns: [BettingOutcomeSubType]
    fk_bettingOutcomeScopeType:
      columns: [BettingOutcomeScopeType]
  manyToOne:
    entity:
      targetEntity: Visca\Bundle\LicomBundle\Entity\Entity
      joinColumns:
        Entity:
          referencedColumnName: id
          nullable: false
    type:
      targetEntity: Visca\Bundle\LicomBundle\Entity\BettingOutcomeType
      joinColumns:
        BettingOutcomeType:
          referencedColumnName: id
          nullable: false
    subType:
      targetEntity: Visca\Bundle\LicomBundle\Entity\BettingOutcomeSubType
      joinColumns:
        BettingOutcomeSubType:
          referencedColumnName: id
          nullable: false
    scopeType:
      targetEntity: Visca\Bundle\LicomBundle\Entity\BettingOutcomeScopeType
      joinColumns:
        BettingOutcomeScopeType:
          referencedColumnName: id
          nullable: false
    match:
      targetEntity: Visca\Bundle\LicomBundle\Entity\Match
      joinColumns:
        entityId:
          referencedColumnName: id
          nullable: false
  # This determines the type of outcome. At the moment we only support ThreeWay and OverUnder outcomes, when more would
  # be added we should add them here as well.
  # Using the value of `BettingOfferType` is not possible since Doctrine does not supports fields as relationship.
  discriminatorColumn:
    name: type
    type: smallint
  discriminatorMap:
    1: Visca\Bundle\LicomBundle\Entity\ThreeWayMatchBettingOutcome
    2: Visca\Bundle\LicomBundle\Entity\OverUnderMatchBettingOutcome
